    let secretKey = {
  "type": "service_account",
  "project_id": "invoice-383609",
  "private_key_id": "058833ceb4dc05c8597e58cbbc8d9d6b9e8423ec",
  "private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDPqlWBGNv433NW\nm/HS/fJ2jJ+iMPnStHR0VxLNOoPlrmaPmYHAdBxy7uHrmkAl2CLe7vhHRZFqNWBf\nc4TNUoW+XHBpOHUvHCn08njikp/pNjKh5RICA0B1NCoY2If4a1V55oKuk5MBzLZU\nbEs4GTfGZkFYfqYSyWcQijMfhYlNi9Emfu3FIAHTkAhezG/JGtcJPqRx0ZV7wb2P\nkWZPJ9bNVK0hmlB2ooL+Wvu8jJa5KPctyLYtWbgl5OmM/CDNZXZN5/WEWkQ/RSzO\nWkr2YVrgyRAs35kNbQeINrMU674DSr0yeBrkbz0J4C32aWe65MGgCUgztai/Gphs\nfTAYzumRAgMBAAECggEAJlWpRxWRtdV58ykCcRKT6bJ33XbxByZswPU58Uy2AHY7\nVJLf0ukcP1M9vUJSSSom9cRjbLS47URBMB2hDE4JhmSGE8ZqS3IFhMQl8J1ki6aH\nnj8tHdX/1iL1CnUeVItr0f7tbNCtOI3Tsq3zDL4K/8LsmSt3+MvZDMKWQWFjQT8T\nCZAcw8MultHZZtEFjPDBjccUl6ri2YjK7ohtcw50T6QHlsy+H0/nf1EPqWKJOVxZ\nF0FNuL/S9iaK6IPcQBvt5yIALFI0MdmuMQ2owsWCrVwvvGxjazFciiMsrJrZponG\nMCvP/SAlIKFRFJhxnKqXMcXZxaqxvfG0yjfKhdAd4QKBgQDtQ04JqB38hyEVw2If\nV+Ac0Fi5esXY0zxvPw6SRPFvLJ5N3foYhdFQoNX3yYaZVvOLb9+Z5AL06JLDizcc\nfY5UUddOobv6o0vptzXvi571ZyeMx8kP4zUEsO4a9ZjprzRdQNIic414kVxGdJF+\nwCfHVCEcrTWUgeV8uo9CI8wWVQKBgQDgEKlqGrlDbQLlujdPQhPIF57PhnDJ5Vf4\nX+3xdsSd7HW4zEYDSsqJA1JWIJlWubzWsg1mumNWj0PSUNnzFn3VyMYjpA9Q7f6X\n+IwMLtO3pOg1YmB5WIBiwERYTpBb2ngJUFzg7tOVpbRpDcRPoHaO9nBIvLQlfhjo\nJkzMMXlqTQKBgQCx4gctCEVLIki012LGmwykrbQHg7u3v0+NHFqhYV0d+/bH7Ifo\nQNPYvm0NNKNcbat0vDCJYUCyO3hlcQelraC7KQzioDGeTTXKCRk/+o738Bnf252r\n8q26UaiCv+WgNkJtM/8X40iKv3jOPfEjdY+dSz70EAyexfC3XeuwK8SEbQKBgQCK\nCBmlwMLCk8RGK1ppXCZ9jHeMFqEi70MrQkV+DBGBzCqVZln3Kzrr/vzZDAoKkC+R\n/2wcDdSmfWllheNOSlvIuH+/cxDwZT0C992mn65ToqZeRLVz655jt1gjInrx6vsp\nmbUt6FK2DLfAQ/fcqdh/p7dyR7WepzjGwtlqrUvDvQKBgFqEJMUPZNy1k/XGcumx\njnKAybyrcNI0UwlxHaS18vaEG/kxBGH1D4Krwm2qk+huf2YF/Vo/rkUXVkxVHUsH\ndVkJ6fkCWTtqeq6BbWGzqT5taE8nIfcEbm/2m3vXnN11UfiGVJVbL96yRJ4rxfTy\nZiTP7v/+Kml69MRFcoG0fdHu\n-----END PRIVATE KEY-----\n",
  "client_email": "admin1@invoice-383609.iam.gserviceaccount.com",
  "client_id": "109386839038181868376",
  "auth_uri": "https://accounts.google.com/o/oauth2/auth",
  "token_uri": "https://oauth2.googleapis.com/token",
  "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
  "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/admin1%40invoice-383609.iam.gserviceaccount.com"
};

// Create a new JWT client using the provided client email and private key
const jwtClient = new google.auth.JWT(
  secretKey.client_email,
  null,
  secretKey.private_key,
  ['https://www.googleapis.com/auth/spreadsheets']
);

// Authenticate the request using the JWT client
jwtClient.authorize(function(err, tokens) {
  if (err) {
    console.log(err);
    return;
  } else {
    console.log("Successfully connected!");
  }
});

// Define the ID of the spreadsheet and the range of cells to update
const spreadsheetId = '1BsQo3WQhnCJrNgDC68wqBumI7KoGTVbTsKnLNZJSj2w';
const sheetRange = 'Sheet1!A2:R2';

// Define the new row of data to add to the spreadsheet
const values = [
  [
    bookingid,bookingdate,traveldate,tripenddate,placetovisit,typeofbooking,customername,customerphone,customeremail,customeraddress,tariff,numberofpax,bookingstatus,inclusions,totalfare,advanceamt,balanceamt,aadhar
  ]
];

// Define the resource object to pass to the Google Sheets API client
const sheetResource = {
  values,
};

// Call the update method on the spreadsheets.values object to update the sheet with the new data
sheets.spreadsheets.values.update({
  auth: jwtClient,
  spreadsheetId: spreadsheetId,
  range: sheetRange,
  resource: sheetResource
});





<script src="https://apis.google.com/js/api.js"></script>
<script>
  /**
   * Sample JavaScript code for sheets.spreadsheets.values.append
   * See instructions for running APIs Explorer code samples locally:
   * https://developers.google.com/explorer-help/code-samples#javascript
   */

  function authenticate() {
    return gapi.auth2.getAuthInstance()
        .signIn({scope: "https://www.googleapis.com/auth/drive https://www.googleapis.com/auth/drive.file https://www.googleapis.com/auth/spreadsheets"})
        .then(function() { console.log("Sign-in successful"); },
              function(err) { console.error("Error signing in", err); });
  }
  function loadClient() {
    gapi.client.setApiKey("YOUR_API_KEY");
    return gapi.client.load("https://sheets.googleapis.com/$discovery/rest?version=v4")
        .then(function() { console.log("GAPI client loaded for API"); },
              function(err) { console.error("Error loading GAPI client for API", err); });
  }
  // Make sure the client is loaded and sign-in is complete before calling this method.
  function execute() {
    return gapi.client.sheets.spreadsheets.values.append({
      "spreadsheetId": "1BsQo3WQhnCJrNgDC68wqBumI7KoGTVbTsKnLNZJSj2w",
      "range": "A1",
      "includeValuesInResponse": true,
      "insertDataOption": "INSERT_ROWS",
      "responseDateTimeRenderOption": "SERIAL_NUMBER",
      "responseValueRenderOption": "FORMATTED_VALUE",
      "valueInputOption": "RAW",
      "resource": {
        "majorDimension": "ROWS",
        "values": [
          [
            "qwerty",
            "14-08-2023",
            "14-02-2023",
            "25-25-2023",
            "goa",
            "QWERTY",
            "qwert",
            "123456789",
            "123@xyz.com",
            "qwerty",
            "123344",
            "1",
            "12334",
            "123",
            "12233",
            "1234567890"
          ]
        ]
      }
    })
        .then(function(response) {
                // Handle the results here (response.result has the parsed body).
                console.log("Response", response);
              },
              function(err) { console.error("Execute error", err); });
  }
  gapi.load("client:auth2", function() {
    gapi.auth2.init({client_id: "YOUR_CLIENT_ID"});
  });
</script>
<button onclick="authenticate().then(loadClient)">authorize and load</button>
<button onclick="execute()">execute</button>
